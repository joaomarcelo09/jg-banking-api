generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:dev.db?mode=memory&cache=shared"
}

model balance {
  id_balance Int     @id @default(autoincrement())
  value      Int?
  users      users[]
}

model people {
  id_people  Int     @id @default(autoincrement())
  name       String  @default("0")
  cpf        String  @default("0")
  telephone  String  @default("0")
  email      String  @default("0")
  date_birth String?
  users      users?
}

model users {
  id_user                                                 Int                 @id @default(autoincrement())
  id_people                                               Int                 @unique @default(0)
  id_balance                                              Int                 @default(0)
  password                                                String
  deposit_record                                          deposit_record[]
  pix_key                                                 pix_key[]
  pix_transaction_pix_transaction_id_pix_senderTousers    pix_transaction[]   @relation("pix_transaction_id_pix_senderTousers")
  pix_transaction_pix_transaction_id_pix_recipientTousers pix_transaction[]   @relation("pix_transaction_id_pix_recipientTousers")
  balance                                                 balance             @relation(fields: [id_balance], references: [id_balance])
  people                                                  people              @relation(fields: [id_people], references: [id_people])
  withdrawal_record                                       withdrawal_record[]

  @@unique([id_balance, id_people])
  @@index([id_balance])
  @@index([id_people])
}

model pix_key {
  id_pix_key Int     @id @default(autoincrement())
  id_user    Int?
  key        String?
  key_type   String?
  users      users?  @relation(fields: [id_user], references: [id_user])

  @@index([id_user])
}

model pix_transaction {
  id_pix_transaction                            Int       @id @default(autoincrement())
  id_pix_sender                                 Int?
  id_pix_recipient                              Int?
  amount_sent                                   Int?
  transiction_date                              DateTime? @default(now())
  users_pix_transaction_id_pix_senderTousers    users?    @relation("pix_transaction_id_pix_senderTousers", fields: [id_pix_sender], references: [id_user])
  users_pix_transaction_id_pix_recipientTousers users?    @relation("pix_transaction_id_pix_recipientTousers", fields: [id_pix_recipient], references: [id_user])

  @@index([id_pix_recipient])
  @@index([id_pix_sender])
}

model withdrawal_record {
  id_withdrawal_record Int       @id @default(autoincrement())
  id_withdrawal_user   Int?
  withdrawal_amount    Int?
  withdrawal_date      DateTime? @default(now())
  users                users?    @relation(fields: [id_withdrawal_user], references: [id_user])

  @@index([id_withdrawal_user])
}

model deposit_record {
  id_deposit_record Int       @id @default(autoincrement())
  id_deposit_user   Int?
  deposit_amount    Int?
  deposit_date      DateTime? @default(now())
  users             users?    @relation(fields: [id_deposit_user], references: [id_user])

  @@index([id_deposit_user])
}
